use mydb

db.createCollection("city")

db.city.insertMany([
  { city: "mumbai", type: "urban", state: "MH", population: 12442373 },
  { city: "nagpur", type: "urban", state: "MH", population: 2405665 },
  { city: "nashik", type: "urban", state: "MH", population: 1486053 },
  { city: "ahmedabad", type: "urban", state: "GJ", population: 5570585 },
  { city: "vadodara", type: "urban", state: "GJ", population: 2065771 },
  { city: "surat", type: "urban", state: "GJ", population: 4467797 },
  { city: "gandhinagar", type: "urban", state: "GJ", population: 208299 },
  { city: "jaipur", type: "urban", state: "RJ", population: 3073350 },
  { city: "jodhpur", type: "urban", state: "RJ", population: 1512676 },
  { city: "udaipur", type: "urban", state: "RJ", population: 451100 },
  { city: "bikaner", type: "rural", state: "RJ", population: 644406 },
  { city: "jalgaon", type: "rural", state: "MH", population: 460468 },
  { city: "palghar", type: "rural", state: "MH", population: 298756 }
]);


Statewise Population using MapReduce
mapState = function() {
  emit(this.state, this.population);
}

reduceState = function(key, values) {
  return Array.sum(values);
}

db.city.mapReduce(mapState, reduceState, { out: "statewise_population" })

Citywise Population using MapReduce

mapCity = function() {
  emit(this.city, this.population);
}

reduceCity = function(key, values) {
  return Array.sum(values);
}

db.city.mapReduce(mapCity, reduceCity, { out: "citywise_population" })


Typewise Population using MapReduce

mapType = function() {
  emit(this.type, this.population);
}

reduceType = function(key, values) {
  return Array.sum(values);
}

db.city.mapReduce(mapType, reduceType, { out: "typewise_population" })
